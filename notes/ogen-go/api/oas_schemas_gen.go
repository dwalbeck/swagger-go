// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"net/netip"
	"time"

	"github.com/go-faster/errors"
)

func (s *GoResponseStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/Address
type Address struct {
	FirstName      OptString   `json:"First_name"`
	LastName       OptString   `json:"Last_name"`
	StreetAddr     string      `json:"Street_addr"`
	StreetAddr2    OptString   `json:"Street_addr_2"`
	City           OptString   `json:"City"`
	State          string      `json:"State"`
	Postcode       string      `json:"Postcode"`
	Country        string      `json:"Country"`
	AddressCreated OptDateTime `json:"Address_created"`
}

// GetFirstName returns the value of FirstName.
func (s *Address) GetFirstName() OptString {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *Address) GetLastName() OptString {
	return s.LastName
}

// GetStreetAddr returns the value of StreetAddr.
func (s *Address) GetStreetAddr() string {
	return s.StreetAddr
}

// GetStreetAddr2 returns the value of StreetAddr2.
func (s *Address) GetStreetAddr2() OptString {
	return s.StreetAddr2
}

// GetCity returns the value of City.
func (s *Address) GetCity() OptString {
	return s.City
}

// GetState returns the value of State.
func (s *Address) GetState() string {
	return s.State
}

// GetPostcode returns the value of Postcode.
func (s *Address) GetPostcode() string {
	return s.Postcode
}

// GetCountry returns the value of Country.
func (s *Address) GetCountry() string {
	return s.Country
}

// GetAddressCreated returns the value of AddressCreated.
func (s *Address) GetAddressCreated() OptDateTime {
	return s.AddressCreated
}

// SetFirstName sets the value of FirstName.
func (s *Address) SetFirstName(val OptString) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *Address) SetLastName(val OptString) {
	s.LastName = val
}

// SetStreetAddr sets the value of StreetAddr.
func (s *Address) SetStreetAddr(val string) {
	s.StreetAddr = val
}

// SetStreetAddr2 sets the value of StreetAddr2.
func (s *Address) SetStreetAddr2(val OptString) {
	s.StreetAddr2 = val
}

// SetCity sets the value of City.
func (s *Address) SetCity(val OptString) {
	s.City = val
}

// SetState sets the value of State.
func (s *Address) SetState(val string) {
	s.State = val
}

// SetPostcode sets the value of Postcode.
func (s *Address) SetPostcode(val string) {
	s.Postcode = val
}

// SetCountry sets the value of Country.
func (s *Address) SetCountry(val string) {
	s.Country = val
}

// SetAddressCreated sets the value of AddressCreated.
func (s *Address) SetAddressCreated(val OptDateTime) {
	s.AddressCreated = val
}

// Ref: #/components/schemas/Contact
type Contact struct {
	ContactPhone     string     `json:"Contact_phone"`
	ContactEmail     string     `json:"Contact_email"`
	ContactAddressID OptAddress `json:"Contact_address_id"`
}

// GetContactPhone returns the value of ContactPhone.
func (s *Contact) GetContactPhone() string {
	return s.ContactPhone
}

// GetContactEmail returns the value of ContactEmail.
func (s *Contact) GetContactEmail() string {
	return s.ContactEmail
}

// GetContactAddressID returns the value of ContactAddressID.
func (s *Contact) GetContactAddressID() OptAddress {
	return s.ContactAddressID
}

// SetContactPhone sets the value of ContactPhone.
func (s *Contact) SetContactPhone(val string) {
	s.ContactPhone = val
}

// SetContactEmail sets the value of ContactEmail.
func (s *Contact) SetContactEmail(val string) {
	s.ContactEmail = val
}

// SetContactAddressID sets the value of ContactAddressID.
func (s *Contact) SetContactAddressID(val OptAddress) {
	s.ContactAddressID = val
}

// Ref: #/components/schemas/GoResponse
type GoResponse struct {
	// Short explanation of either the successful or failed processing of order record.
	Message OptString `json:"message"`
	// Indicator on the outcome of the submitted order record.
	Outcome OptGoResponseOutcome `json:"outcome"`
	// List of failures for non-required data blocks.
	NonMinusFatal []GoResponseNonMinusFatalItem `json:"non-fatal"`
}

// GetMessage returns the value of Message.
func (s *GoResponse) GetMessage() OptString {
	return s.Message
}

// GetOutcome returns the value of Outcome.
func (s *GoResponse) GetOutcome() OptGoResponseOutcome {
	return s.Outcome
}

// GetNonMinusFatal returns the value of NonMinusFatal.
func (s *GoResponse) GetNonMinusFatal() []GoResponseNonMinusFatalItem {
	return s.NonMinusFatal
}

// SetMessage sets the value of Message.
func (s *GoResponse) SetMessage(val OptString) {
	s.Message = val
}

// SetOutcome sets the value of Outcome.
func (s *GoResponse) SetOutcome(val OptGoResponseOutcome) {
	s.Outcome = val
}

// SetNonMinusFatal sets the value of NonMinusFatal.
func (s *GoResponse) SetNonMinusFatal(val []GoResponseNonMinusFatalItem) {
	s.NonMinusFatal = val
}

type GoResponseNonMinusFatalItem struct {
	DbTablePath OptString `json:"db_table_path"`
	Error       OptString `json:"error"`
}

// GetDbTablePath returns the value of DbTablePath.
func (s *GoResponseNonMinusFatalItem) GetDbTablePath() OptString {
	return s.DbTablePath
}

// GetError returns the value of Error.
func (s *GoResponseNonMinusFatalItem) GetError() OptString {
	return s.Error
}

// SetDbTablePath sets the value of DbTablePath.
func (s *GoResponseNonMinusFatalItem) SetDbTablePath(val OptString) {
	s.DbTablePath = val
}

// SetError sets the value of Error.
func (s *GoResponseNonMinusFatalItem) SetError(val OptString) {
	s.Error = val
}

// Indicator on the outcome of the submitted order record.
type GoResponseOutcome string

const (
	GoResponseOutcomeSuccess GoResponseOutcome = "success"
	GoResponseOutcomeFailed  GoResponseOutcome = "failed"
)

// AllValues returns all GoResponseOutcome values.
func (GoResponseOutcome) AllValues() []GoResponseOutcome {
	return []GoResponseOutcome{
		GoResponseOutcomeSuccess,
		GoResponseOutcomeFailed,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GoResponseOutcome) MarshalText() ([]byte, error) {
	switch s {
	case GoResponseOutcomeSuccess:
		return []byte(s), nil
	case GoResponseOutcomeFailed:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GoResponseOutcome) UnmarshalText(data []byte) error {
	switch GoResponseOutcome(data) {
	case GoResponseOutcomeSuccess:
		*s = GoResponseOutcomeSuccess
		return nil
	case GoResponseOutcomeFailed:
		*s = GoResponseOutcomeFailed
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// GoResponseStatusCode wraps GoResponse with StatusCode.
type GoResponseStatusCode struct {
	StatusCode int
	Response   GoResponse
}

// GetStatusCode returns the value of StatusCode.
func (s *GoResponseStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *GoResponseStatusCode) GetResponse() GoResponse {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *GoResponseStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *GoResponseStatusCode) SetResponse(val GoResponse) {
	s.Response = val
}

// NewOptAddress returns new OptAddress with value set to v.
func NewOptAddress(v Address) OptAddress {
	return OptAddress{
		Value: v,
		Set:   true,
	}
}

// OptAddress is optional Address.
type OptAddress struct {
	Value Address
	Set   bool
}

// IsSet returns true if OptAddress was set.
func (o OptAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddress) Reset() {
	var v Address
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddress) SetTo(v Address) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddress) Get() (v Address, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddress) Or(d Address) Address {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptContact returns new OptContact with value set to v.
func NewOptContact(v Contact) OptContact {
	return OptContact{
		Value: v,
		Set:   true,
	}
}

// OptContact is optional Contact.
type OptContact struct {
	Value Contact
	Set   bool
}

// IsSet returns true if OptContact was set.
func (o OptContact) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContact) Reset() {
	var v Contact
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContact) SetTo(v Contact) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContact) Get() (v Contact, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptContact) Or(d Contact) Contact {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDate returns new OptDate with value set to v.
func NewOptDate(v time.Time) OptDate {
	return OptDate{
		Value: v,
		Set:   true,
	}
}

// OptDate is optional time.Time.
type OptDate struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDate was set.
func (o OptDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDate) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDate) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDate) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDate) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGoResponseOutcome returns new OptGoResponseOutcome with value set to v.
func NewOptGoResponseOutcome(v GoResponseOutcome) OptGoResponseOutcome {
	return OptGoResponseOutcome{
		Value: v,
		Set:   true,
	}
}

// OptGoResponseOutcome is optional GoResponseOutcome.
type OptGoResponseOutcome struct {
	Value GoResponseOutcome
	Set   bool
}

// IsSet returns true if OptGoResponseOutcome was set.
func (o OptGoResponseOutcome) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGoResponseOutcome) Reset() {
	var v GoResponseOutcome
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGoResponseOutcome) SetTo(v GoResponseOutcome) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGoResponseOutcome) Get() (v GoResponseOutcome, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGoResponseOutcome) Or(d GoResponseOutcome) GoResponseOutcome {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptIPv4 returns new OptIPv4 with value set to v.
func NewOptIPv4(v netip.Addr) OptIPv4 {
	return OptIPv4{
		Value: v,
		Set:   true,
	}
}

// OptIPv4 is optional netip.Addr.
type OptIPv4 struct {
	Value netip.Addr
	Set   bool
}

// IsSet returns true if OptIPv4 was set.
func (o OptIPv4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIPv4) Reset() {
	var v netip.Addr
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIPv4) SetTo(v netip.Addr) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIPv4) Get() (v netip.Addr, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptIPv4) Or(d netip.Addr) netip.Addr {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilInt) SetToNull() {
	o.Set = true
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOrderBilling returns new OptOrderBilling with value set to v.
func NewOptOrderBilling(v OrderBilling) OptOrderBilling {
	return OptOrderBilling{
		Value: v,
		Set:   true,
	}
}

// OptOrderBilling is optional OrderBilling.
type OptOrderBilling struct {
	Value OrderBilling
	Set   bool
}

// IsSet returns true if OptOrderBilling was set.
func (o OptOrderBilling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrderBilling) Reset() {
	var v OrderBilling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrderBilling) SetTo(v OrderBilling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrderBilling) Get() (v OrderBilling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOrderBilling) Or(d OrderBilling) OrderBilling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOrderDetail returns new OptOrderDetail with value set to v.
func NewOptOrderDetail(v OrderDetail) OptOrderDetail {
	return OptOrderDetail{
		Value: v,
		Set:   true,
	}
}

// OptOrderDetail is optional OrderDetail.
type OptOrderDetail struct {
	Value OrderDetail
	Set   bool
}

// IsSet returns true if OptOrderDetail was set.
func (o OptOrderDetail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrderDetail) Reset() {
	var v OrderDetail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrderDetail) SetTo(v OrderDetail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrderDetail) Get() (v OrderDetail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOrderDetail) Or(d OrderDetail) OrderDetail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOrderShipping returns new OptOrderShipping with value set to v.
func NewOptOrderShipping(v OrderShipping) OptOrderShipping {
	return OptOrderShipping{
		Value: v,
		Set:   true,
	}
}

// OptOrderShipping is optional OrderShipping.
type OptOrderShipping struct {
	Value OrderShipping
	Set   bool
}

// IsSet returns true if OptOrderShipping was set.
func (o OptOrderShipping) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrderShipping) Reset() {
	var v OrderShipping
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrderShipping) SetTo(v OrderShipping) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrderShipping) Get() (v OrderShipping, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOrderShipping) Or(d OrderShipping) OrderShipping {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOrderTransaction returns new OptOrderTransaction with value set to v.
func NewOptOrderTransaction(v OrderTransaction) OptOrderTransaction {
	return OptOrderTransaction{
		Value: v,
		Set:   true,
	}
}

// OptOrderTransaction is optional OrderTransaction.
type OptOrderTransaction struct {
	Value OrderTransaction
	Set   bool
}

// IsSet returns true if OptOrderTransaction was set.
func (o OptOrderTransaction) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrderTransaction) Reset() {
	var v OrderTransaction
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrderTransaction) SetTo(v OrderTransaction) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrderTransaction) Get() (v OrderTransaction, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOrderTransaction) Or(d OrderTransaction) OrderTransaction {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPayment returns new OptPayment with value set to v.
func NewOptPayment(v Payment) OptPayment {
	return OptPayment{
		Value: v,
		Set:   true,
	}
}

// OptPayment is optional Payment.
type OptPayment struct {
	Value Payment
	Set   bool
}

// IsSet returns true if OptPayment was set.
func (o OptPayment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPayment) Reset() {
	var v Payment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPayment) SetTo(v Payment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPayment) Get() (v Payment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPayment) Or(d Payment) Payment {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentCCType returns new OptPaymentCCType with value set to v.
func NewOptPaymentCCType(v PaymentCCType) OptPaymentCCType {
	return OptPaymentCCType{
		Value: v,
		Set:   true,
	}
}

// OptPaymentCCType is optional PaymentCCType.
type OptPaymentCCType struct {
	Value PaymentCCType
	Set   bool
}

// IsSet returns true if OptPaymentCCType was set.
func (o OptPaymentCCType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentCCType) Reset() {
	var v PaymentCCType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentCCType) SetTo(v PaymentCCType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentCCType) Get() (v PaymentCCType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentCCType) Or(d PaymentCCType) PaymentCCType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Order
type Order struct {
	IngestionProviderID int                 `json:"Ingestion_provider_id"`
	CompanyID           int                 `json:"Company_id"`
	OrderUUID           OptNilString        `json:"Order_uuid"`
	ClientOrderID       OptInt              `json:"Client_order_id"`
	CrmAccountID        OptInt              `json:"Crm_account_id"`
	OrderStatus         OptInt              `json:"Order_status"`
	OrderCreated        OptDateTime         `json:"Order_created"`
	OrderDetail         OptOrderDetail      `json:"Order_detail"`
	OrderBilling        OptOrderBilling     `json:"Order_billing"`
	OrderTransaction    OptOrderTransaction `json:"Order_transaction"`
	OrderProduct        OrderProduct        `json:"Order_product"`
	OrderShipping       OptOrderShipping    `json:"Order_shipping"`
	OrderNote           OrderNote           `json:"Order_note"`
}

// GetIngestionProviderID returns the value of IngestionProviderID.
func (s *Order) GetIngestionProviderID() int {
	return s.IngestionProviderID
}

// GetCompanyID returns the value of CompanyID.
func (s *Order) GetCompanyID() int {
	return s.CompanyID
}

// GetOrderUUID returns the value of OrderUUID.
func (s *Order) GetOrderUUID() OptNilString {
	return s.OrderUUID
}

// GetClientOrderID returns the value of ClientOrderID.
func (s *Order) GetClientOrderID() OptInt {
	return s.ClientOrderID
}

// GetCrmAccountID returns the value of CrmAccountID.
func (s *Order) GetCrmAccountID() OptInt {
	return s.CrmAccountID
}

// GetOrderStatus returns the value of OrderStatus.
func (s *Order) GetOrderStatus() OptInt {
	return s.OrderStatus
}

// GetOrderCreated returns the value of OrderCreated.
func (s *Order) GetOrderCreated() OptDateTime {
	return s.OrderCreated
}

// GetOrderDetail returns the value of OrderDetail.
func (s *Order) GetOrderDetail() OptOrderDetail {
	return s.OrderDetail
}

// GetOrderBilling returns the value of OrderBilling.
func (s *Order) GetOrderBilling() OptOrderBilling {
	return s.OrderBilling
}

// GetOrderTransaction returns the value of OrderTransaction.
func (s *Order) GetOrderTransaction() OptOrderTransaction {
	return s.OrderTransaction
}

// GetOrderProduct returns the value of OrderProduct.
func (s *Order) GetOrderProduct() OrderProduct {
	return s.OrderProduct
}

// GetOrderShipping returns the value of OrderShipping.
func (s *Order) GetOrderShipping() OptOrderShipping {
	return s.OrderShipping
}

// GetOrderNote returns the value of OrderNote.
func (s *Order) GetOrderNote() OrderNote {
	return s.OrderNote
}

// SetIngestionProviderID sets the value of IngestionProviderID.
func (s *Order) SetIngestionProviderID(val int) {
	s.IngestionProviderID = val
}

// SetCompanyID sets the value of CompanyID.
func (s *Order) SetCompanyID(val int) {
	s.CompanyID = val
}

// SetOrderUUID sets the value of OrderUUID.
func (s *Order) SetOrderUUID(val OptNilString) {
	s.OrderUUID = val
}

// SetClientOrderID sets the value of ClientOrderID.
func (s *Order) SetClientOrderID(val OptInt) {
	s.ClientOrderID = val
}

// SetCrmAccountID sets the value of CrmAccountID.
func (s *Order) SetCrmAccountID(val OptInt) {
	s.CrmAccountID = val
}

// SetOrderStatus sets the value of OrderStatus.
func (s *Order) SetOrderStatus(val OptInt) {
	s.OrderStatus = val
}

// SetOrderCreated sets the value of OrderCreated.
func (s *Order) SetOrderCreated(val OptDateTime) {
	s.OrderCreated = val
}

// SetOrderDetail sets the value of OrderDetail.
func (s *Order) SetOrderDetail(val OptOrderDetail) {
	s.OrderDetail = val
}

// SetOrderBilling sets the value of OrderBilling.
func (s *Order) SetOrderBilling(val OptOrderBilling) {
	s.OrderBilling = val
}

// SetOrderTransaction sets the value of OrderTransaction.
func (s *Order) SetOrderTransaction(val OptOrderTransaction) {
	s.OrderTransaction = val
}

// SetOrderProduct sets the value of OrderProduct.
func (s *Order) SetOrderProduct(val OrderProduct) {
	s.OrderProduct = val
}

// SetOrderShipping sets the value of OrderShipping.
func (s *Order) SetOrderShipping(val OptOrderShipping) {
	s.OrderShipping = val
}

// SetOrderNote sets the value of OrderNote.
func (s *Order) SetOrderNote(val OrderNote) {
	s.OrderNote = val
}

// Ref: #/components/schemas/Order_billing
type OrderBilling struct {
	Mid                 OptString  `json:"Mid"`
	OrderTotal          OptFloat64 `json:"Order_total"`
	Currency            OptString  `json:"Currency"`
	UsdAmount           OptFloat64 `json:"Usd_amount"`
	SalesTax            OptFloat64 `json:"Sales_tax"`
	SalesTaxAmount      OptFloat64 `json:"Sales_tax_amount"`
	TotalAmountRefunded OptFloat64 `json:"Total_amount_refunded"`
	BillingCycle        OptInt     `json:"Billing_cycle"`
	RecurringDate       OptDate    `json:"Recurring_date"`
	RetryDate           OptDate    `json:"Retry_date"`
	BillingAddressID    OptAddress `json:"Billing_address_id"`
}

// GetMid returns the value of Mid.
func (s *OrderBilling) GetMid() OptString {
	return s.Mid
}

// GetOrderTotal returns the value of OrderTotal.
func (s *OrderBilling) GetOrderTotal() OptFloat64 {
	return s.OrderTotal
}

// GetCurrency returns the value of Currency.
func (s *OrderBilling) GetCurrency() OptString {
	return s.Currency
}

// GetUsdAmount returns the value of UsdAmount.
func (s *OrderBilling) GetUsdAmount() OptFloat64 {
	return s.UsdAmount
}

// GetSalesTax returns the value of SalesTax.
func (s *OrderBilling) GetSalesTax() OptFloat64 {
	return s.SalesTax
}

// GetSalesTaxAmount returns the value of SalesTaxAmount.
func (s *OrderBilling) GetSalesTaxAmount() OptFloat64 {
	return s.SalesTaxAmount
}

// GetTotalAmountRefunded returns the value of TotalAmountRefunded.
func (s *OrderBilling) GetTotalAmountRefunded() OptFloat64 {
	return s.TotalAmountRefunded
}

// GetBillingCycle returns the value of BillingCycle.
func (s *OrderBilling) GetBillingCycle() OptInt {
	return s.BillingCycle
}

// GetRecurringDate returns the value of RecurringDate.
func (s *OrderBilling) GetRecurringDate() OptDate {
	return s.RecurringDate
}

// GetRetryDate returns the value of RetryDate.
func (s *OrderBilling) GetRetryDate() OptDate {
	return s.RetryDate
}

// GetBillingAddressID returns the value of BillingAddressID.
func (s *OrderBilling) GetBillingAddressID() OptAddress {
	return s.BillingAddressID
}

// SetMid sets the value of Mid.
func (s *OrderBilling) SetMid(val OptString) {
	s.Mid = val
}

// SetOrderTotal sets the value of OrderTotal.
func (s *OrderBilling) SetOrderTotal(val OptFloat64) {
	s.OrderTotal = val
}

// SetCurrency sets the value of Currency.
func (s *OrderBilling) SetCurrency(val OptString) {
	s.Currency = val
}

// SetUsdAmount sets the value of UsdAmount.
func (s *OrderBilling) SetUsdAmount(val OptFloat64) {
	s.UsdAmount = val
}

// SetSalesTax sets the value of SalesTax.
func (s *OrderBilling) SetSalesTax(val OptFloat64) {
	s.SalesTax = val
}

// SetSalesTaxAmount sets the value of SalesTaxAmount.
func (s *OrderBilling) SetSalesTaxAmount(val OptFloat64) {
	s.SalesTaxAmount = val
}

// SetTotalAmountRefunded sets the value of TotalAmountRefunded.
func (s *OrderBilling) SetTotalAmountRefunded(val OptFloat64) {
	s.TotalAmountRefunded = val
}

// SetBillingCycle sets the value of BillingCycle.
func (s *OrderBilling) SetBillingCycle(val OptInt) {
	s.BillingCycle = val
}

// SetRecurringDate sets the value of RecurringDate.
func (s *OrderBilling) SetRecurringDate(val OptDate) {
	s.RecurringDate = val
}

// SetRetryDate sets the value of RetryDate.
func (s *OrderBilling) SetRetryDate(val OptDate) {
	s.RetryDate = val
}

// SetBillingAddressID sets the value of BillingAddressID.
func (s *OrderBilling) SetBillingAddressID(val OptAddress) {
	s.BillingAddressID = val
}

// Ref: #/components/schemas/Order_detail
type OrderDetail struct {
	CustomerID          OptInt      `json:"Customer_id"`
	AncestorID          OptInt      `json:"Ancestor_id"`
	ParentID            OptInt      `json:"Parent_id"`
	ChildID             OptNilInt   `json:"Child_id"`
	CrmRefunded         OptBool     `json:"Crm_refunded"`
	CrmBlacklisted      OptBool     `json:"Crm_blacklisted"`
	CrmStoppedRecurring OptBool     `json:"Crm_stopped_recurring"`
	IPAddress           OptIPv4     `json:"Ip_address"`
	Affiliate           OptInt      `json:"Affiliate"`
	SubAffiliate        OptString   `json:"Sub_affiliate"`
	CampaignID          OptInt      `json:"Campaign_id"`
	ClickID             OptInt      `json:"Click_id"`
	Resolved            OptBool     `json:"Resolved"`
	OnHoldBy            OptString   `json:"On_hold_by"`
	OnHoldDate          OptDate     `json:"On_hold_date"`
	OrderConfirmed      OptBool     `json:"Order_confirmed"`
	OrderConfirmedDate  OptDate     `json:"Order_confirmed_date"`
	OrderDate           OptDate     `json:"Order_date"`
	DetailCreated       OptDateTime `json:"Detail_created"`
	DetailUpdated       OptDateTime `json:"Detail_updated"`
	OrderContactID      OptContact  `json:"Order_contact_id"`
}

// GetCustomerID returns the value of CustomerID.
func (s *OrderDetail) GetCustomerID() OptInt {
	return s.CustomerID
}

// GetAncestorID returns the value of AncestorID.
func (s *OrderDetail) GetAncestorID() OptInt {
	return s.AncestorID
}

// GetParentID returns the value of ParentID.
func (s *OrderDetail) GetParentID() OptInt {
	return s.ParentID
}

// GetChildID returns the value of ChildID.
func (s *OrderDetail) GetChildID() OptNilInt {
	return s.ChildID
}

// GetCrmRefunded returns the value of CrmRefunded.
func (s *OrderDetail) GetCrmRefunded() OptBool {
	return s.CrmRefunded
}

// GetCrmBlacklisted returns the value of CrmBlacklisted.
func (s *OrderDetail) GetCrmBlacklisted() OptBool {
	return s.CrmBlacklisted
}

// GetCrmStoppedRecurring returns the value of CrmStoppedRecurring.
func (s *OrderDetail) GetCrmStoppedRecurring() OptBool {
	return s.CrmStoppedRecurring
}

// GetIPAddress returns the value of IPAddress.
func (s *OrderDetail) GetIPAddress() OptIPv4 {
	return s.IPAddress
}

// GetAffiliate returns the value of Affiliate.
func (s *OrderDetail) GetAffiliate() OptInt {
	return s.Affiliate
}

// GetSubAffiliate returns the value of SubAffiliate.
func (s *OrderDetail) GetSubAffiliate() OptString {
	return s.SubAffiliate
}

// GetCampaignID returns the value of CampaignID.
func (s *OrderDetail) GetCampaignID() OptInt {
	return s.CampaignID
}

// GetClickID returns the value of ClickID.
func (s *OrderDetail) GetClickID() OptInt {
	return s.ClickID
}

// GetResolved returns the value of Resolved.
func (s *OrderDetail) GetResolved() OptBool {
	return s.Resolved
}

// GetOnHoldBy returns the value of OnHoldBy.
func (s *OrderDetail) GetOnHoldBy() OptString {
	return s.OnHoldBy
}

// GetOnHoldDate returns the value of OnHoldDate.
func (s *OrderDetail) GetOnHoldDate() OptDate {
	return s.OnHoldDate
}

// GetOrderConfirmed returns the value of OrderConfirmed.
func (s *OrderDetail) GetOrderConfirmed() OptBool {
	return s.OrderConfirmed
}

// GetOrderConfirmedDate returns the value of OrderConfirmedDate.
func (s *OrderDetail) GetOrderConfirmedDate() OptDate {
	return s.OrderConfirmedDate
}

// GetOrderDate returns the value of OrderDate.
func (s *OrderDetail) GetOrderDate() OptDate {
	return s.OrderDate
}

// GetDetailCreated returns the value of DetailCreated.
func (s *OrderDetail) GetDetailCreated() OptDateTime {
	return s.DetailCreated
}

// GetDetailUpdated returns the value of DetailUpdated.
func (s *OrderDetail) GetDetailUpdated() OptDateTime {
	return s.DetailUpdated
}

// GetOrderContactID returns the value of OrderContactID.
func (s *OrderDetail) GetOrderContactID() OptContact {
	return s.OrderContactID
}

// SetCustomerID sets the value of CustomerID.
func (s *OrderDetail) SetCustomerID(val OptInt) {
	s.CustomerID = val
}

// SetAncestorID sets the value of AncestorID.
func (s *OrderDetail) SetAncestorID(val OptInt) {
	s.AncestorID = val
}

// SetParentID sets the value of ParentID.
func (s *OrderDetail) SetParentID(val OptInt) {
	s.ParentID = val
}

// SetChildID sets the value of ChildID.
func (s *OrderDetail) SetChildID(val OptNilInt) {
	s.ChildID = val
}

// SetCrmRefunded sets the value of CrmRefunded.
func (s *OrderDetail) SetCrmRefunded(val OptBool) {
	s.CrmRefunded = val
}

// SetCrmBlacklisted sets the value of CrmBlacklisted.
func (s *OrderDetail) SetCrmBlacklisted(val OptBool) {
	s.CrmBlacklisted = val
}

// SetCrmStoppedRecurring sets the value of CrmStoppedRecurring.
func (s *OrderDetail) SetCrmStoppedRecurring(val OptBool) {
	s.CrmStoppedRecurring = val
}

// SetIPAddress sets the value of IPAddress.
func (s *OrderDetail) SetIPAddress(val OptIPv4) {
	s.IPAddress = val
}

// SetAffiliate sets the value of Affiliate.
func (s *OrderDetail) SetAffiliate(val OptInt) {
	s.Affiliate = val
}

// SetSubAffiliate sets the value of SubAffiliate.
func (s *OrderDetail) SetSubAffiliate(val OptString) {
	s.SubAffiliate = val
}

// SetCampaignID sets the value of CampaignID.
func (s *OrderDetail) SetCampaignID(val OptInt) {
	s.CampaignID = val
}

// SetClickID sets the value of ClickID.
func (s *OrderDetail) SetClickID(val OptInt) {
	s.ClickID = val
}

// SetResolved sets the value of Resolved.
func (s *OrderDetail) SetResolved(val OptBool) {
	s.Resolved = val
}

// SetOnHoldBy sets the value of OnHoldBy.
func (s *OrderDetail) SetOnHoldBy(val OptString) {
	s.OnHoldBy = val
}

// SetOnHoldDate sets the value of OnHoldDate.
func (s *OrderDetail) SetOnHoldDate(val OptDate) {
	s.OnHoldDate = val
}

// SetOrderConfirmed sets the value of OrderConfirmed.
func (s *OrderDetail) SetOrderConfirmed(val OptBool) {
	s.OrderConfirmed = val
}

// SetOrderConfirmedDate sets the value of OrderConfirmedDate.
func (s *OrderDetail) SetOrderConfirmedDate(val OptDate) {
	s.OrderConfirmedDate = val
}

// SetOrderDate sets the value of OrderDate.
func (s *OrderDetail) SetOrderDate(val OptDate) {
	s.OrderDate = val
}

// SetDetailCreated sets the value of DetailCreated.
func (s *OrderDetail) SetDetailCreated(val OptDateTime) {
	s.DetailCreated = val
}

// SetDetailUpdated sets the value of DetailUpdated.
func (s *OrderDetail) SetDetailUpdated(val OptDateTime) {
	s.DetailUpdated = val
}

// SetOrderContactID sets the value of OrderContactID.
func (s *OrderDetail) SetOrderContactID(val OptContact) {
	s.OrderContactID = val
}

type OrderNote []OrderNoteItem

type OrderNoteItem struct {
	NoteMessage OptString   `json:"Note_message"`
	NoteCreated OptDateTime `json:"Note_created"`
}

// GetNoteMessage returns the value of NoteMessage.
func (s *OrderNoteItem) GetNoteMessage() OptString {
	return s.NoteMessage
}

// GetNoteCreated returns the value of NoteCreated.
func (s *OrderNoteItem) GetNoteCreated() OptDateTime {
	return s.NoteCreated
}

// SetNoteMessage sets the value of NoteMessage.
func (s *OrderNoteItem) SetNoteMessage(val OptString) {
	s.NoteMessage = val
}

// SetNoteCreated sets the value of NoteCreated.
func (s *OrderNoteItem) SetNoteCreated(val OptDateTime) {
	s.NoteCreated = val
}

type OrderProduct []OrderProductItem

type OrderProductItem struct {
	ProductID             OptInt      `json:"Product_id"`
	ProductQuantity       OptInt      `json:"Product_quantity"`
	UpsellProductID       OptInt      `json:"Upsell_product_id"`
	UpsellProductQuantity OptInt      `json:"Upsell_product_quantity"`
	OrderProductCreated   OptDateTime `json:"Order_product_created"`
}

// GetProductID returns the value of ProductID.
func (s *OrderProductItem) GetProductID() OptInt {
	return s.ProductID
}

// GetProductQuantity returns the value of ProductQuantity.
func (s *OrderProductItem) GetProductQuantity() OptInt {
	return s.ProductQuantity
}

// GetUpsellProductID returns the value of UpsellProductID.
func (s *OrderProductItem) GetUpsellProductID() OptInt {
	return s.UpsellProductID
}

// GetUpsellProductQuantity returns the value of UpsellProductQuantity.
func (s *OrderProductItem) GetUpsellProductQuantity() OptInt {
	return s.UpsellProductQuantity
}

// GetOrderProductCreated returns the value of OrderProductCreated.
func (s *OrderProductItem) GetOrderProductCreated() OptDateTime {
	return s.OrderProductCreated
}

// SetProductID sets the value of ProductID.
func (s *OrderProductItem) SetProductID(val OptInt) {
	s.ProductID = val
}

// SetProductQuantity sets the value of ProductQuantity.
func (s *OrderProductItem) SetProductQuantity(val OptInt) {
	s.ProductQuantity = val
}

// SetUpsellProductID sets the value of UpsellProductID.
func (s *OrderProductItem) SetUpsellProductID(val OptInt) {
	s.UpsellProductID = val
}

// SetUpsellProductQuantity sets the value of UpsellProductQuantity.
func (s *OrderProductItem) SetUpsellProductQuantity(val OptInt) {
	s.UpsellProductQuantity = val
}

// SetOrderProductCreated sets the value of OrderProductCreated.
func (s *OrderProductItem) SetOrderProductCreated(val OptDateTime) {
	s.OrderProductCreated = val
}

// Ref: #/components/schemas/Order_shipping
type OrderShipping struct {
	ShippingMethodName OptString  `json:"Shipping_method_name"`
	ShippingDate       OptString  `json:"Shipping_date"`
	TrackingNumber     OptString  `json:"Tracking_number"`
	ShippingAddressID  OptAddress `json:"Shipping_address_id"`
}

// GetShippingMethodName returns the value of ShippingMethodName.
func (s *OrderShipping) GetShippingMethodName() OptString {
	return s.ShippingMethodName
}

// GetShippingDate returns the value of ShippingDate.
func (s *OrderShipping) GetShippingDate() OptString {
	return s.ShippingDate
}

// GetTrackingNumber returns the value of TrackingNumber.
func (s *OrderShipping) GetTrackingNumber() OptString {
	return s.TrackingNumber
}

// GetShippingAddressID returns the value of ShippingAddressID.
func (s *OrderShipping) GetShippingAddressID() OptAddress {
	return s.ShippingAddressID
}

// SetShippingMethodName sets the value of ShippingMethodName.
func (s *OrderShipping) SetShippingMethodName(val OptString) {
	s.ShippingMethodName = val
}

// SetShippingDate sets the value of ShippingDate.
func (s *OrderShipping) SetShippingDate(val OptString) {
	s.ShippingDate = val
}

// SetTrackingNumber sets the value of TrackingNumber.
func (s *OrderShipping) SetTrackingNumber(val OptString) {
	s.TrackingNumber = val
}

// SetShippingAddressID sets the value of ShippingAddressID.
func (s *OrderShipping) SetShippingAddressID(val OptAddress) {
	s.ShippingAddressID = val
}

// Ref: #/components/schemas/Order_transaction
type OrderTransaction struct {
	AvsResponse     OptString   `json:"Avs_response"`
	CvvResponse     OptString   `json:"Cvv_response"`
	ProcessorID     OptString   `json:"Processor_id"`
	GatewayID       OptInt      `json:"Gateway_id"`
	TransactionID   OptInt      `json:"Transaction_id"`
	AuthID          OptString   `json:"Auth_id"`
	PanLocked       OptBool     `json:"Pan_locked"`
	PreserveGateway OptBool     `json:"Preserve_gateway"`
	IsRecurring     OptBool     `json:"Is_recurring"`
	IsChargeback    OptBool     `json:"Is_chargeback"`
	IsFraud         OptBool     `json:"Is_fraud"`
	IsRma           OptBool     `json:"Is_rma"`
	RmaNumber       OptString   `json:"Rma_number"`
	RmaReason       OptString   `json:"Rma_reason"`
	DeclineReason   OptString   `json:"Decline_reason"`
	TransactionDate OptDateTime `json:"Transaction_date"`
	PaymentID       OptPayment  `json:"Payment_id"`
}

// GetAvsResponse returns the value of AvsResponse.
func (s *OrderTransaction) GetAvsResponse() OptString {
	return s.AvsResponse
}

// GetCvvResponse returns the value of CvvResponse.
func (s *OrderTransaction) GetCvvResponse() OptString {
	return s.CvvResponse
}

// GetProcessorID returns the value of ProcessorID.
func (s *OrderTransaction) GetProcessorID() OptString {
	return s.ProcessorID
}

// GetGatewayID returns the value of GatewayID.
func (s *OrderTransaction) GetGatewayID() OptInt {
	return s.GatewayID
}

// GetTransactionID returns the value of TransactionID.
func (s *OrderTransaction) GetTransactionID() OptInt {
	return s.TransactionID
}

// GetAuthID returns the value of AuthID.
func (s *OrderTransaction) GetAuthID() OptString {
	return s.AuthID
}

// GetPanLocked returns the value of PanLocked.
func (s *OrderTransaction) GetPanLocked() OptBool {
	return s.PanLocked
}

// GetPreserveGateway returns the value of PreserveGateway.
func (s *OrderTransaction) GetPreserveGateway() OptBool {
	return s.PreserveGateway
}

// GetIsRecurring returns the value of IsRecurring.
func (s *OrderTransaction) GetIsRecurring() OptBool {
	return s.IsRecurring
}

// GetIsChargeback returns the value of IsChargeback.
func (s *OrderTransaction) GetIsChargeback() OptBool {
	return s.IsChargeback
}

// GetIsFraud returns the value of IsFraud.
func (s *OrderTransaction) GetIsFraud() OptBool {
	return s.IsFraud
}

// GetIsRma returns the value of IsRma.
func (s *OrderTransaction) GetIsRma() OptBool {
	return s.IsRma
}

// GetRmaNumber returns the value of RmaNumber.
func (s *OrderTransaction) GetRmaNumber() OptString {
	return s.RmaNumber
}

// GetRmaReason returns the value of RmaReason.
func (s *OrderTransaction) GetRmaReason() OptString {
	return s.RmaReason
}

// GetDeclineReason returns the value of DeclineReason.
func (s *OrderTransaction) GetDeclineReason() OptString {
	return s.DeclineReason
}

// GetTransactionDate returns the value of TransactionDate.
func (s *OrderTransaction) GetTransactionDate() OptDateTime {
	return s.TransactionDate
}

// GetPaymentID returns the value of PaymentID.
func (s *OrderTransaction) GetPaymentID() OptPayment {
	return s.PaymentID
}

// SetAvsResponse sets the value of AvsResponse.
func (s *OrderTransaction) SetAvsResponse(val OptString) {
	s.AvsResponse = val
}

// SetCvvResponse sets the value of CvvResponse.
func (s *OrderTransaction) SetCvvResponse(val OptString) {
	s.CvvResponse = val
}

// SetProcessorID sets the value of ProcessorID.
func (s *OrderTransaction) SetProcessorID(val OptString) {
	s.ProcessorID = val
}

// SetGatewayID sets the value of GatewayID.
func (s *OrderTransaction) SetGatewayID(val OptInt) {
	s.GatewayID = val
}

// SetTransactionID sets the value of TransactionID.
func (s *OrderTransaction) SetTransactionID(val OptInt) {
	s.TransactionID = val
}

// SetAuthID sets the value of AuthID.
func (s *OrderTransaction) SetAuthID(val OptString) {
	s.AuthID = val
}

// SetPanLocked sets the value of PanLocked.
func (s *OrderTransaction) SetPanLocked(val OptBool) {
	s.PanLocked = val
}

// SetPreserveGateway sets the value of PreserveGateway.
func (s *OrderTransaction) SetPreserveGateway(val OptBool) {
	s.PreserveGateway = val
}

// SetIsRecurring sets the value of IsRecurring.
func (s *OrderTransaction) SetIsRecurring(val OptBool) {
	s.IsRecurring = val
}

// SetIsChargeback sets the value of IsChargeback.
func (s *OrderTransaction) SetIsChargeback(val OptBool) {
	s.IsChargeback = val
}

// SetIsFraud sets the value of IsFraud.
func (s *OrderTransaction) SetIsFraud(val OptBool) {
	s.IsFraud = val
}

// SetIsRma sets the value of IsRma.
func (s *OrderTransaction) SetIsRma(val OptBool) {
	s.IsRma = val
}

// SetRmaNumber sets the value of RmaNumber.
func (s *OrderTransaction) SetRmaNumber(val OptString) {
	s.RmaNumber = val
}

// SetRmaReason sets the value of RmaReason.
func (s *OrderTransaction) SetRmaReason(val OptString) {
	s.RmaReason = val
}

// SetDeclineReason sets the value of DeclineReason.
func (s *OrderTransaction) SetDeclineReason(val OptString) {
	s.DeclineReason = val
}

// SetTransactionDate sets the value of TransactionDate.
func (s *OrderTransaction) SetTransactionDate(val OptDateTime) {
	s.TransactionDate = val
}

// SetPaymentID sets the value of PaymentID.
func (s *OrderTransaction) SetPaymentID(val OptPayment) {
	s.PaymentID = val
}

// Ref: #/components/schemas/Payment
type Payment struct {
	CCType       OptPaymentCCType `json:"CC_type"`
	CcNumber     OptString        `json:"Cc_number"`
	CcExp        OptString        `json:"Cc_exp"`
	CardSource   OptString        `json:"Card_source"`
	CheckAccount OptString        `json:"Check_account"`
	CheckRouting OptString        `json:"Check_routing"`
	CheckSsn     OptString        `json:"Check_ssn"`
	CardBin      OptString        `json:"Card_bin"`
	CardBinShort OptString        `json:"Card_bin_short"`
	PrepaidMatch OptBool          `json:"Prepaid_match"`
}

// GetCCType returns the value of CCType.
func (s *Payment) GetCCType() OptPaymentCCType {
	return s.CCType
}

// GetCcNumber returns the value of CcNumber.
func (s *Payment) GetCcNumber() OptString {
	return s.CcNumber
}

// GetCcExp returns the value of CcExp.
func (s *Payment) GetCcExp() OptString {
	return s.CcExp
}

// GetCardSource returns the value of CardSource.
func (s *Payment) GetCardSource() OptString {
	return s.CardSource
}

// GetCheckAccount returns the value of CheckAccount.
func (s *Payment) GetCheckAccount() OptString {
	return s.CheckAccount
}

// GetCheckRouting returns the value of CheckRouting.
func (s *Payment) GetCheckRouting() OptString {
	return s.CheckRouting
}

// GetCheckSsn returns the value of CheckSsn.
func (s *Payment) GetCheckSsn() OptString {
	return s.CheckSsn
}

// GetCardBin returns the value of CardBin.
func (s *Payment) GetCardBin() OptString {
	return s.CardBin
}

// GetCardBinShort returns the value of CardBinShort.
func (s *Payment) GetCardBinShort() OptString {
	return s.CardBinShort
}

// GetPrepaidMatch returns the value of PrepaidMatch.
func (s *Payment) GetPrepaidMatch() OptBool {
	return s.PrepaidMatch
}

// SetCCType sets the value of CCType.
func (s *Payment) SetCCType(val OptPaymentCCType) {
	s.CCType = val
}

// SetCcNumber sets the value of CcNumber.
func (s *Payment) SetCcNumber(val OptString) {
	s.CcNumber = val
}

// SetCcExp sets the value of CcExp.
func (s *Payment) SetCcExp(val OptString) {
	s.CcExp = val
}

// SetCardSource sets the value of CardSource.
func (s *Payment) SetCardSource(val OptString) {
	s.CardSource = val
}

// SetCheckAccount sets the value of CheckAccount.
func (s *Payment) SetCheckAccount(val OptString) {
	s.CheckAccount = val
}

// SetCheckRouting sets the value of CheckRouting.
func (s *Payment) SetCheckRouting(val OptString) {
	s.CheckRouting = val
}

// SetCheckSsn sets the value of CheckSsn.
func (s *Payment) SetCheckSsn(val OptString) {
	s.CheckSsn = val
}

// SetCardBin sets the value of CardBin.
func (s *Payment) SetCardBin(val OptString) {
	s.CardBin = val
}

// SetCardBinShort sets the value of CardBinShort.
func (s *Payment) SetCardBinShort(val OptString) {
	s.CardBinShort = val
}

// SetPrepaidMatch sets the value of PrepaidMatch.
func (s *Payment) SetPrepaidMatch(val OptBool) {
	s.PrepaidMatch = val
}

type PaymentCCType string

const (
	PaymentCCTypeMastercard PaymentCCType = "mastercard"
	PaymentCCTypeVisa       PaymentCCType = "visa"
	PaymentCCTypeAmex       PaymentCCType = "amex"
	PaymentCCTypeDiscover   PaymentCCType = "discover"
)

// AllValues returns all PaymentCCType values.
func (PaymentCCType) AllValues() []PaymentCCType {
	return []PaymentCCType{
		PaymentCCTypeMastercard,
		PaymentCCTypeVisa,
		PaymentCCTypeAmex,
		PaymentCCTypeDiscover,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentCCType) MarshalText() ([]byte, error) {
	switch s {
	case PaymentCCTypeMastercard:
		return []byte(s), nil
	case PaymentCCTypeVisa:
		return []byte(s), nil
	case PaymentCCTypeAmex:
		return []byte(s), nil
	case PaymentCCTypeDiscover:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentCCType) UnmarshalText(data []byte) error {
	switch PaymentCCType(data) {
	case PaymentCCTypeMastercard:
		*s = PaymentCCTypeMastercard
		return nil
	case PaymentCCTypeVisa:
		*s = PaymentCCTypeVisa
		return nil
	case PaymentCCTypeAmex:
		*s = PaymentCCTypeAmex
		return nil
	case PaymentCCTypeDiscover:
		*s = PaymentCCTypeDiscover
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}
