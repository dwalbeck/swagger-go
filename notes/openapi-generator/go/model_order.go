/*
 * Order Uploader
 *
 * Takes cleaned and validated order data records as input and enters the record into the database tables
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"time"
)



type Order struct {

	IngestionProviderId int32 `json:"Ingestion_provider_id"`

	CompanyId int32 `json:"Company_id"`

	OrderUuid *string `json:"Order_uuid,omitempty"`

	ClientOrderId int32 `json:"Client_order_id,omitempty"`

	CrmAccountId int32 `json:"Crm_account_id,omitempty"`

	OrderStatus int32 `json:"Order_status,omitempty"`

	OrderCreated time.Time `json:"Order_created,omitempty"`

	OrderDetail OrderDetail `json:"Order_detail,omitempty"`

	OrderBilling OrderBilling `json:"Order_billing,omitempty"`

	OrderTransaction OrderTransaction `json:"Order_transaction,omitempty"`

	OrderProduct []OrderProductInner `json:"Order_product,omitempty"`

	OrderShipping OrderShipping `json:"Order_shipping,omitempty"`

	OrderNote []OrderNoteInner `json:"Order_note,omitempty"`
}

// AssertOrderRequired checks if the required fields are not zero-ed
func AssertOrderRequired(obj Order) error {
	elements := map[string]interface{}{
		"Ingestion_provider_id": obj.IngestionProviderId,
		"Company_id": obj.CompanyId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertOrderDetailRequired(obj.OrderDetail); err != nil {
		return err
	}
	if err := AssertOrderBillingRequired(obj.OrderBilling); err != nil {
		return err
	}
	if err := AssertOrderTransactionRequired(obj.OrderTransaction); err != nil {
		return err
	}
	for _, el := range obj.OrderProduct {
		if err := AssertOrderProductInnerRequired(el); err != nil {
			return err
		}
	}
	if err := AssertOrderShippingRequired(obj.OrderShipping); err != nil {
		return err
	}
	for _, el := range obj.OrderNote {
		if err := AssertOrderNoteInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertOrderConstraints checks if the values respects the defined constraints
func AssertOrderConstraints(obj Order) error {
	return nil
}
